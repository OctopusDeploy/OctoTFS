name: Build

on:
  push:
    branches: [ main ]
    tags: [ '*' ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      OCTOPUS_VERSION: 5.0.${{ github.run_number }}
    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'
          cache: 'npm'
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: '^1.17.7'
      - name: Build
        run: |
          npm install
          npm run build -- --extensionVersion $OCTOPUS_VERSION
          npm run test
      - uses: dorny/test-reporter@v1
        if: success() || failure()
        name: Tests report
        with:
          name: Tests report
          path: 'reports/jest-*.xml'
          reporter: jest-junit
      - name: Embed octo portable
        run: |
          pwsh ./embed-octo.ps1
      - name: Replace versions in tasks and create vsix
        run: |
          ./pack.ps1 -environment Production -version $Env:OCTOPUS_VERSION -setupTaskDependencies
          ./pack.ps1 -environment Test -version $Env:OCTOPUS_VERSION
        shell: pwsh
      - name: Create Packages
        run: |
          tar -czf OctoTFS.vsix.$OCTOPUS_VERSION.tar.gz ./dist/Artifacts/**/*.vsix
          tar -czf OctoTFS.publish.$OCTOPUS_VERSION.tar.gz ./publish.ps1 ./dist/extension-manifest*.json
      - name: Push Package
        run: |
          docker run -e "OCTOPUS_CLI_SERVER=${{ secrets.OCTOPUS_URL }}" -e "OCTOPUS_CLI_API_KEY=${{ secrets.INTEGRATIONS_API_KEY }}" -v $(pwd):/src octopusdeploy/octo push --space "Integrations" --package OctoTFS.vsix.$OCTOPUS_VERSION.tar.gz --package OctoTFS.publish.$OCTOPUS_VERSION.tar.gz --overwrite-mode OverwriteExisting
      - name: Create Release
        run: |
          docker run -e "OCTOPUS_CLI_SERVER=${{ secrets.OCTOPUS_URL }}" -e "OCTOPUS_CLI_API_KEY=${{ secrets.INTEGRATIONS_API_KEY }}" -v $(pwd):/src octopusdeploy/octo create-release --space "Integrations" --project "Azure DevOps Extension" --packageVersion $OCTOPUS_VERSION --releaseNumber $OCTOPUS_VERSION --gitRef "${{ (github.ref_type == 'tag' && 'main' ) || (github.head_ref || github.ref) }}" --gitCommit "${{ github.event.after || github.event.pull_request.head.sha }}"

