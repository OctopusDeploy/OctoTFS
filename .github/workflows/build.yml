name: Build

on:
  workflow_call:
    secrets:
      OCTOPUS_URL:
        required: true
      OCTOPUS_CLI_API_KEY:
        required: true
    outputs:
      PACKAGE_VERSION:
        description: "The package version being built"
        value: $Env:PACKAGE_VERSION
env:
  PACKAGE_VERSION: 5.2.${{ github.run_number }}
  OCTOPUS_CLI_SERVER: ${{ secrets.OCTOPUS_URL }}
  OCTOPUS_CLI_API_KEY: ${{ secrets.OCTOPUS_CLI_API_KEY }}

jobs:
  build:
    name: Build code
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'
          cache: 'npm'
      - name: Build
        run: |
          npm install
          npm run build -- --extensionVersion $PACKAGE_VERSION
      - uses: actions/upload-artifact@v2
        with:
          name: dist
          path: dist/
  
  test:
    name: Run test matrix
    needs: build
    runs-on: ${{ matrix.os }}
    permissions:
      id-token: write
      contents: read
      checks: write
    strategy:
      matrix:
        os: [ windows-2022, ubuntu-20.04, macos-11 ]
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'
          cache: 'npm'
      - name: Test
        run: |
          npm install
          npm run test
      - uses: dorny/test-reporter@v1
        if: success() || failure()
        name: Tests report
        with:
          name: Tests report
          path: 'reports/jest-*.xml'
          reporter: jest-junit
  
  package:
    name: Package and Push artifacts to Octopus
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: dist
          path: dist

      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'
          cache: 'npm'

      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: '^1.17.7'

      - name: Embed octo portable
        run: |
          pwsh ./embed-octo.ps1

      - name: Replace versions in tasks and create vsix
        run: |
          ./pack.ps1 -environment Production -version $Env:PACKAGE_VERSION -setupTaskDependencies
          ./pack.ps1 -environment Test -version $Env:PACKAGE_VERSION
        shell: pwsh

      - name: Create Packages
        run: |
          tar -czf OctoTFS.vsix.$PACKAGE_VERSION.tar.gz ./dist/Artifacts/**/*.vsix
          tar -czf OctoTFS.publish.$PACKAGE_VERSION.tar.gz ./publish.ps1 ./dist/extension-manifest*.json

      - name: Push Package
        uses: OctopusDeploy/push-package-action@v1.1.2
        with:
            space: "Integrations"
            packages: "OctoTFS.vsix.$PACKAGE_VERSION.tar.gz,OctoTFS.publish.$PACKAGE_VERSION.tar.gz"
